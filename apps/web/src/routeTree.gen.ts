/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PPlaylistIDVideoIDImport } from './routes/p/$playlistID/$videoID'

// Create Virtual Routes

const PPlaylistIDIndexLazyImport = createFileRoute('/p/$playlistID/')()
const PPlaylistIDEditLazyImport = createFileRoute('/p/$playlistID/edit')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PPlaylistIDIndexLazyRoute = PPlaylistIDIndexLazyImport.update({
  path: '/p/$playlistID/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p/$playlistID/index.lazy').then((d) => d.Route),
)

const PPlaylistIDEditLazyRoute = PPlaylistIDEditLazyImport.update({
  path: '/p/$playlistID/edit',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p/$playlistID/edit.lazy').then((d) => d.Route),
)

const PPlaylistIDVideoIDRoute = PPlaylistIDVideoIDImport.update({
  path: '/p/$playlistID/$videoID',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/p/$playlistID/$videoID': {
      id: '/p/$playlistID/$videoID'
      path: '/p/$playlistID/$videoID'
      fullPath: '/p/$playlistID/$videoID'
      preLoaderRoute: typeof PPlaylistIDVideoIDImport
      parentRoute: typeof rootRoute
    }
    '/p/$playlistID/edit': {
      id: '/p/$playlistID/edit'
      path: '/p/$playlistID/edit'
      fullPath: '/p/$playlistID/edit'
      preLoaderRoute: typeof PPlaylistIDEditLazyImport
      parentRoute: typeof rootRoute
    }
    '/p/$playlistID/': {
      id: '/p/$playlistID/'
      path: '/p/$playlistID'
      fullPath: '/p/$playlistID'
      preLoaderRoute: typeof PPlaylistIDIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  PPlaylistIDVideoIDRoute,
  PPlaylistIDEditLazyRoute,
  PPlaylistIDIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/p/$playlistID/$videoID",
        "/p/$playlistID/edit",
        "/p/$playlistID/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/p/$playlistID/$videoID": {
      "filePath": "p/$playlistID/$videoID.tsx"
    },
    "/p/$playlistID/edit": {
      "filePath": "p/$playlistID/edit.lazy.tsx"
    },
    "/p/$playlistID/": {
      "filePath": "p/$playlistID/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
