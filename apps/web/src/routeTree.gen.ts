/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthLogoutImport } from './routes/auth/logout'
import { Route as PPlaylistIDVideoIDImport } from './routes/p/$playlistID/$videoID'
import { Route as AuthGoogleRedirectImport } from './routes/auth/google/redirect'
import { Route as AuthGoogleLoginImport } from './routes/auth/google/login'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const UUserIDLazyImport = createFileRoute('/u/$userID')()
const PPlaylistIDIndexLazyImport = createFileRoute('/p/$playlistID/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UUserIDLazyRoute = UUserIDLazyImport.update({
  path: '/u/$userID',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/u/$userID.lazy').then((d) => d.Route))

const AuthLogoutRoute = AuthLogoutImport.update({
  path: '/auth/logout',
  getParentRoute: () => rootRoute,
} as any)

const PPlaylistIDIndexLazyRoute = PPlaylistIDIndexLazyImport.update({
  path: '/p/$playlistID/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p/$playlistID/index.lazy').then((d) => d.Route),
)

const PPlaylistIDVideoIDRoute = PPlaylistIDVideoIDImport.update({
  path: '/p/$playlistID/$videoID',
  getParentRoute: () => rootRoute,
} as any)

const AuthGoogleRedirectRoute = AuthGoogleRedirectImport.update({
  path: '/auth/google/redirect',
  getParentRoute: () => rootRoute,
} as any)

const AuthGoogleLoginRoute = AuthGoogleLoginImport.update({
  path: '/auth/google/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/auth/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof rootRoute
    }
    '/u/$userID': {
      id: '/u/$userID'
      path: '/u/$userID'
      fullPath: '/u/$userID'
      preLoaderRoute: typeof UUserIDLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/google/login': {
      id: '/auth/google/login'
      path: '/auth/google/login'
      fullPath: '/auth/google/login'
      preLoaderRoute: typeof AuthGoogleLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/google/redirect': {
      id: '/auth/google/redirect'
      path: '/auth/google/redirect'
      fullPath: '/auth/google/redirect'
      preLoaderRoute: typeof AuthGoogleRedirectImport
      parentRoute: typeof rootRoute
    }
    '/p/$playlistID/$videoID': {
      id: '/p/$playlistID/$videoID'
      path: '/p/$playlistID/$videoID'
      fullPath: '/p/$playlistID/$videoID'
      preLoaderRoute: typeof PPlaylistIDVideoIDImport
      parentRoute: typeof rootRoute
    }
    '/p/$playlistID/': {
      id: '/p/$playlistID/'
      path: '/p/$playlistID'
      fullPath: '/p/$playlistID'
      preLoaderRoute: typeof PPlaylistIDIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AuthLogoutRoute,
  UUserIDLazyRoute,
  AuthGoogleLoginRoute,
  AuthGoogleRedirectRoute,
  PPlaylistIDVideoIDRoute,
  PPlaylistIDIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/logout",
        "/u/$userID",
        "/auth/google/login",
        "/auth/google/redirect",
        "/p/$playlistID/$videoID",
        "/p/$playlistID/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth/logout": {
      "filePath": "auth/logout.tsx"
    },
    "/u/$userID": {
      "filePath": "u/$userID.lazy.tsx"
    },
    "/auth/google/login": {
      "filePath": "auth/google/login.tsx"
    },
    "/auth/google/redirect": {
      "filePath": "auth/google/redirect.tsx"
    },
    "/p/$playlistID/$videoID": {
      "filePath": "p/$playlistID/$videoID.tsx"
    },
    "/p/$playlistID/": {
      "filePath": "p/$playlistID/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
